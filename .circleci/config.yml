version: 2

references:
  primary_containers: &primary_containers
    docker:
      - image: circleci/python:3.6.8

  test_containers: &test_containers
    docker:
      - image: circleci/python:3.6.8
      - image: localstack/localstack:0.9.1
        environment:
          SERVICES: s3

  install_dependencies: &install_dependencies
    run:
      name: Install Dependencies
      command: |
        if [[ ! -d .venv ]]; then
          python -m venv .venv
          source .venv/bin/activate
          pip install pipenv==$ARTILF_PIPENV_VERSION
          pipenv install
        fi

  save_dependencies: &save_dependencies
    save_cache:
      paths:
        - .venv
      key: dependencies-{{ .Branch }}-{{ checksum "Pipfile" }}-{{ checksum "Pipfile.lock" }}

  restore_dependencies: &restore_dependencies
    restore_cache:
      keys:
        - dependencies-{{ .Branch }}-{{ checksum "Pipfile" }}-{{ checksum "Pipfile.lock" }}


jobs:
  test_unit:
    <<: *primary_containers
    steps:
      - checkout
      - <<: *restore_dependencies
      - <<: *install_dependencies
      - <<: *save_dependencies
      - run:
          name: raw account
          command: |
            source .venv/bin/activate

            aws sts get-caller-identity
      - run:
          name: development
          command: |
            source .venv/bin/activate

            eval "$(./guess.sh -e development -a)"
            aws sts get-caller-identity
      - run:
          name: production
          command: |
            source .venv/bin/activate

            eval "$(./guess.sh -e production -a)"
            aws sts get-caller-identity

workflows:
  version: 2
  aws_test:
    jobs:
      - test_unit
