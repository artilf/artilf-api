version: 2

references:
  primary_containers: &primary_containers
    docker:
      - image: circleci/python:3.6.8

  test_containers: &test_containers
    docker:
      - image: circleci/python:3.6.8
      - image: localstack/localstack:0.9.1
        environment:
          SERVICES: s3,sqs

  install_dependencies: &install_dependencies
    run:
      name: Install Dependencies
      command: |
        if [[ ! -d .venv ]]; then
          python -m venv .venv
          source .venv/bin/activate
          pip install pipenv==$ARTILF_PIPENV_VERSION
          pipenv install
        fi

  save_dependencies: &save_dependencies
    save_cache:
      paths:
        - .venv
      key: dependencies-{{ .Branch }}-{{ checksum "Pipfile" }}-{{ checksum "Pipfile.lock" }}

  restore_dependencies: &restore_dependencies
    restore_cache:
      keys:
        - dependencies-{{ .Branch }}-{{ checksum "Pipfile" }}-{{ checksum "Pipfile.lock" }}

  notify_start_to_slack: &notify_start_to_slack
    run:
      name: Notify Start to Slack
      command: ./notify.sh -s

  notify_success_to_slack: &notify_success_to_slack
    run:
      name: Notify Success to Slack
      command: ./notify.sh -e

  notify_failed_to_slack: &notify_failed_to_slack
    run:
      name: Notify Failed to Slack
      command: ./notify.sh -f
      when: on_fail

jobs:
  test_unit:
    <<: *test_containers
    steps:
      - checkout
      - <<: *notify_start_to_slack
      - run:
          name: Get Submodule
          command: |
            git submodule init
            git submodule update
      - <<: *restore_dependencies
      - <<: *install_dependencies
      - <<: *save_dependencies
      - run:
          name: Lint & Test Unit
          command: |
            source .venv/bin/activate
            eval "$(./guess.sh -e development)"
            make lint test-unit
      - <<: *notify_success_to_slack
      - <<: *notify_failed_to_slack

  test_integration:
    <<: *primary_containers
    steps:
      - checkout
      - <<: *notify_start_to_slack
      - <<: *restore_dependencies
      - <<: *install_dependencies
      - <<: *save_dependencies
      - <<: *notify_success_to_slack
      - <<: *notify_failed_to_slack

  test_integration_log_parse:
    <<: *primary_containers
    steps:
      - checkout
      - <<: *notify_start_to_slack
      - <<: *restore_dependencies
      - <<: *install_dependencies
      - <<: *save_dependencies
      - run:
          name: deploy itg test resource
          command: |
            source .venv/bin/activate

            eval "$(./guess.sh -e development -a)"
            make itg-log-parse-create
      - run:
          name: remove itg test resource
          command: |
            source .venv/bin/activate

            eval "$(./guess.sh -e development -a)"
            make itg-log-parse-remove
          when: always
      - <<: *notify_success_to_slack
      - <<: *notify_failed_to_slack

  deploy_development:
    <<: *primary_containers
    steps:
      - checkout
      - <<: *notify_start_to_slack
      - <<: *restore_dependencies
      - <<: *install_dependencies
      - <<: *save_dependencies
      - run:
          name: deploy
          command: |
            source .venv/bin/activate

            eval "$(./guess.sh -e development -a)"
            make deploy
      - store_artifacts:
          path: packaged_template.yml
      - <<: *notify_success_to_slack
      - <<: *notify_failed_to_slack

  test_e2e_development:
    <<: *primary_containers
    steps:
      - checkout
      - <<: *notify_start_to_slack
      - <<: *restore_dependencies
      - <<: *install_dependencies
      - <<: *save_dependencies
      - run:
          name: test e2e on development
          command: echo e2e
      - <<: *notify_success_to_slack
      - <<: *notify_failed_to_slack

  deploy_production:
    <<: *primary_containers
    steps:
      - checkout
      - <<: *notify_start_to_slack
      - <<: *restore_dependencies
      - <<: *install_dependencies
      - <<: *save_dependencies
      - run:
          name: deploy
          command: |
            source .venv/bin/activate

            eval "$(./guess.sh -e production -a)"
            make deploy
      - store_artifacts:
          path: packaged_template.yml
      - <<: *notify_success_to_slack
      - <<: *notify_failed_to_slack

  test_e2e_production:
    <<: *primary_containers
    steps:
      - checkout
      - <<: *notify_start_to_slack
      - <<: *restore_dependencies
      - <<: *install_dependencies
      - <<: *save_dependencies
      - run:
          name: test e2e production
          command: echo e2e
      - <<: *notify_success_to_slack
      - <<: *notify_failed_to_slack

workflows:
  version: 2
  artilf_api_development:
    jobs:
      - test_unit
      - test_integration_log_parse:
          requires:
            - test_unit
      - deploy_development:
          requires:
            - test_integration_log_parse
      - test_e2e_development:
          requires:
            - deploy_development

  artilf_api_production:
    jobs:
      - test_unit:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - test_integration_log_parse:
          requires:
            - test_unit
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy_development:
          requires:
            - test_integration_log_parse
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - test_e2e_development:
          requires:
            - deploy_development
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - approve_deploy_production:
          type: approval
          requires:
            - test_e2e_development
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy_production:
          requires:
            - approve_deploy_production
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - test_e2e_production:
          requires:
            - deploy_production
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
